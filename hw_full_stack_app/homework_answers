### Task

Draw a diagram showing the dataflow through the application starting with a form submission, ending with the re-rendering of the page. This will involve a multi-direction data-flow with the client posting data to the server and the server sending data back to the client with the response. Detail the client, server and database in the diagram and include the names of the files involved in the process.

### Questions

1. What is responsible for defining the routes of the `games` resource?

gamesRouter: uses the function CreateRouter.


2. What do you notice about the folder structure?  Whats the client responsible for? Whats the server responsible for?

Client & Server are disparate - they belong to their own folders. The front-end is adhered to by Client, whereas Server maintains the back-end.

3. What are the the responsibilities of server.js?

Ensuring that a connection is made to the database, listening for requests as well as translating pertinent data into the JSON format where required.

4. What are the responsibilities of the `gamesRouter`?

The 'gamesRouter' defines routes by ensuring the database commands are correctly carried out on the pertinent data. 

5. What process does the the client (front-end) use to communicate with the server?

The Fetch function.

6. What optional second argument does the `fetch` method take? And what is it used for in this application? Hint: See [Using Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) on the MDN docs

Body, header, methods.

7. Which of the games API routes does the front-end application consume (i.e. make requests to)?

POST, GET, DELETE.


8. What are we using the [MongoDB Driver](http://mongodb.github.io/node-mongodb-native/) for?

As well as connecting the database to the server, it allows JS to send commands.
